/* src/components/GameBoard/GameBoard.module.css */

/* Define CSS variables for consistent sizing */
:root {
  /* Responsive cell sizing based on viewport - aim for 70% coverage */
  /* Calculate cell size based on viewport dimensions and grid size */
  --cell-size: min(calc(70vw / 25), calc(70vh / 20), 60px); /* 70% viewport divided by grid cells */
  --cell-font-size: calc(var(--cell-size) * 0.75); /* 75% of cell size */
  
  /* Map size in cells - adjust for 70% viewport coverage */
  --map-cols: 25; /* Increased columns */
  --map-rows: 20; /* Increased rows */
}

.gameBoard {
  /* Container for the game board and overlays */
  position: relative;
  width: 100%; /* Fill available width */
  height: 100%; /* Fill available height */
  overflow: hidden; /* Ensures content stays within the board boundaries */
  background-color: var(--color-twilight); /* Use color system */
  transition: background-color 0.5s ease, box-shadow 0.5s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 1rem; /* Reduced padding for more game space */
}

/* Time of day atmospheric styling */
.gameBoard.dawn {
  background-color: var(--color-twilight);
  box-shadow: 0 0 20px var(--color-golden-glow);
  filter: brightness(1.1) hue-rotate(-10deg);
}

.gameBoard.dawn .gridCell {
  color: var(--color-golden-light);
}

.gameBoard.day {
  background-color: var(--color-dusk);
  box-shadow: 0 0 15px var(--color-electric-blue-glow);
  filter: brightness(1.2);
}

.gameBoard.dusk {
  background-color: var(--color-twilight);
  box-shadow: 0 0 20px var(--color-crimson-glow);
  filter: brightness(0.9) hue-rotate(10deg);
}

.gameBoard.dusk .gridCell {
  color: var(--color-golden-light);
  opacity: 0.9;
}

.gameBoard.night {
  background-color: var(--color-midnight);
  box-shadow: 0 0 25px var(--color-violet-glow);
}

.gameBoard.night .gridCell {
  color: var(--color-electric-blue-light);
  opacity: 0.8;
}

/* Map container with scroll */
.mapContainer {
  position: relative;
  overflow: auto; /* Enable scrolling when map is larger than viewport */
  max-width: calc(var(--cell-size) * var(--map-cols));
  max-height: calc(var(--cell-size) * var(--map-rows));
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 2px solid var(--border-default);
  border-radius: 8px;
  box-shadow: var(--shadow-lg), inset 0 0 20px rgba(0, 0, 0, 0.5);
  background: var(--bg-secondary);
}

/* Custom scrollbar styling */
.mapContainer::-webkit-scrollbar {
  width: 12px;
  height: 12px;
}

.mapContainer::-webkit-scrollbar-track {
  background: var(--bg-tertiary);
  border-radius: 6px;
}

.mapContainer::-webkit-scrollbar-thumb {
  background: var(--color-cyber-green);
  border-radius: 6px;
  box-shadow: inset 0 0 3px rgba(0, 0, 0, 0.5);
}

.mapContainer::-webkit-scrollbar-thumb:hover {
  background: var(--color-cyber-green-light);
}

/* Grid layout for cells */
.grid {
  display: grid;
  grid-template-columns: repeat(var(--map-cols), var(--cell-size));
  grid-template-rows: repeat(var(--map-rows), var(--cell-size));
  gap: 0; /* No gap between cells for seamless map */
  background-color: var(--bg-primary);
  position: relative;
}

/* Individual grid cells */
.gridCell {
  width: var(--cell-size);
  height: var(--cell-size);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: var(--cell-font-size);
  line-height: 1;
  position: relative;
  transition: all 0.15s ease;
  background-color: var(--tile-floor);
  color: var(--text-primary);
  user-select: none;
  cursor: default;
}

/* Wall cells */
.gridCell.wall {
  background-color: var(--tile-wall);
  color: var(--text-muted);
  box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.8);
}

/* Floor cells */
.gridCell.floor {
  background-color: var(--tile-floor);
}

/* Interactive cells (NPCs, items, etc.) */
.gridCell.interactive {
  cursor: pointer;
  background-color: var(--tile-floor);
  box-shadow: 0 0 10px var(--tile-interactive);
}

.gridCell.interactive:hover {
  transform: scale(1.05);
  box-shadow: 0 0 15px var(--color-cyber-green-glow);
  z-index: 10;
}

/* Dangerous cells */
.gridCell.danger {
  background-color: var(--tile-floor);
  box-shadow: 0 0 10px var(--tile-danger);
  animation: dangerPulse 2s infinite;
}

@keyframes dangerPulse {
  0%, 100% { opacity: 0.8; }
  50% { opacity: 1; box-shadow: 0 0 20px var(--color-crimson-glow); }
}

/* Player cell */
.gridCell.player {
  background-color: var(--color-cyber-green);
  color: var(--color-obsidian);
  font-weight: bold;
  box-shadow: 0 0 20px var(--color-cyber-green-glow);
  z-index: 20;
  animation: playerGlow 2s infinite;
}

@keyframes playerGlow {
  0%, 100% { box-shadow: 0 0 20px var(--color-cyber-green-glow); }
  50% { box-shadow: 0 0 30px var(--color-cyber-green-glow), 0 0 40px var(--color-cyber-green-glow); }
}

/* Entity visibility states */
.gridCell .entity {
  opacity: 1;
  transition: opacity 0.3s ease;
}

.gridCell.fogOfWar .entity:not(.player) {
  opacity: 0.3;
}

.gridCell.hidden .entity:not(.player) {
  opacity: 0;
}

/* Special tile types */
.gridCell.entrance {
  background-color: var(--color-electric-blue);
  color: var(--color-white);
  box-shadow: 0 0 15px var(--color-electric-blue-glow);
}

.gridCell.exit {
  background-color: var(--color-golden);
  color: var(--color-obsidian);
  box-shadow: 0 0 15px var(--color-golden-glow);
}

.gridCell.treasure {
  background-color: var(--color-violet);
  color: var(--color-white);
  box-shadow: 0 0 15px var(--color-violet-glow);
  animation: treasureSparkle 3s infinite;
}

@keyframes treasureSparkle {
  0%, 100% { transform: scale(1); filter: brightness(1); }
  50% { transform: scale(1.05); filter: brightness(1.2); }
}

/* Movement indicators */
.gridCell.validMove {
  background-color: var(--color-cyber-green);
  opacity: 0.3;
  cursor: pointer;
}

.gridCell.invalidMove {
  background-color: var(--color-crimson);
  opacity: 0.3;
  cursor: not-allowed;
}

/* Pathfinding visualization */
.gridCell.path {
  background-color: var(--color-electric-blue);
  opacity: 0.4;
}

/* Combat indicators */
.gridCell.targetable {
  background-color: var(--color-crimson);
  opacity: 0.5;
  cursor: crosshair;
  animation: targetPulse 1s infinite;
}

@keyframes targetPulse {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 0.6; }
}

.gridCell.selected {
  border: 2px solid var(--color-golden);
  box-shadow: 0 0 10px var(--color-golden-glow);
}

/* Weather effects overlay */
.weatherOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  z-index: 100;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  :root {
    --cell-size: min(calc(85vw / 25), calc(85vh / 20), 40px);
  }
  
  .gameBoard {
    padding: 0.5rem;
  }
  
  .mapContainer {
    border-width: 1px;
  }
}

@media (min-width: 1920px) {
  :root {
    --cell-size: min(calc(60vw / 25), calc(60vh / 20), 80px);
  }
}

/* Accessibility */
@media (prefers-reduced-motion: reduce) {
  .gridCell,
  .gridCell.interactive:hover,
  .gridCell.player,
  .gridCell.treasure {
    animation: none;
    transition: none;
  }
}

/* High contrast mode */
@media (prefers-contrast: high) {
  .gridCell {
    border: 1px solid var(--border-strong);
  }
  
  .gridCell.wall {
    background-color: var(--color-obsidian);
    color: var(--color-white);
  }
  
  .gridCell.player {
    background-color: var(--color-white);
    color: var(--color-obsidian);
  }
}