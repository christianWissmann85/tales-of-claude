/* src/components/GameBoard/GameBoard.module.css */

/* Define CSS variables for consistent sizing */
:root {
  /* Responsive cell sizing based on viewport - aim for 70% coverage */
  /* Calculate cell size based on viewport dimensions and grid size */
  --cell-size: min(calc(70vw / 25), calc(70vh / 20), 60px); /* 70% viewport divided by grid cells */
  --cell-font-size: calc(var(--cell-size) * 0.75); /* 75% of cell size */
  
  /* Map size in cells - adjust for 70% viewport coverage */
  --map-cols: 25; /* Increased columns */
  --map-rows: 20; /* Increased rows */
}

.gameBoard {
  /* Container for the game board and overlays */
  position: relative;
  width: 100%; /* Fill available width */
  height: 100%; /* Fill available height */
  overflow: hidden; /* Ensures content stays within the board boundaries */
  background-color: #1a1a1a; /* Dark background for contrast */
  transition: background-color 0.5s ease, box-shadow 0.5s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 1rem; /* Reduced padding for more game space */
}

/* Time of day atmospheric styling */
.gameBoard.dawn {
  background-color: #2a1a1a;
  box-shadow: 0 0 20px rgba(255, 140, 90, 0.4);
}

.gameBoard.dawn .gridCell {
  color: #ffd4b3;
}

.gameBoard.day {
  background-color: #1f1f1f;
  box-shadow: 0 0 15px rgba(135, 206, 235, 0.3);
}

.gameBoard.dusk {
  background-color: #251818;
  box-shadow: 0 0 20px rgba(255, 99, 71, 0.4);
}

.gameBoard.dusk .gridCell {
  color: #ffccbb;
}

.gameBoard.night {
  background-color: #0a0a15;
  box-shadow: 0 0 25px rgba(25, 25, 112, 0.6);
}

.gameBoard.night .gridCell {
  color: #c4c4ff;
}

.gridCell {
  display: flex;
  justify-content: center; /* Center content horizontally */
  align-items: center; /* Center content vertically */
  width: var(--cell-size);
  height: var(--cell-size);
  box-sizing: border-box; /* Include padding and border in the element's total width and height */
  user-select: none; /* Prevent text selection on game elements */
  /* Optional: Add a subtle border for visual grid lines */
  border: 1px solid rgba(255, 255, 255, 0.03); /* More subtle grid lines */
}

.mapGridContainer {
  display: grid;
  /* Grid dimensions are set dynamically via inline style in MapGrid.tsx */
  width: 100%; /* Fill container width */
  height: 100%; /* Fill container height */
  /* Remove fixed max-width/height constraints - let it fill the container */
  border: 2px solid #333;
  background-color: #1a1a1a; /* Dark background for contrast */
  font-family: 'monospace', 'Courier New', Courier, monospace;
  font-size: var(--cell-font-size);
  color: #eee;
  overflow: hidden;
  position: relative;
  box-shadow: 0 0 15px rgba(0, 255, 0, 0.5);
  image-rendering: pixelated;
  margin: 0 auto; /* Center the grid if it doesn't fill width */
}

.fpsCounter {
  position: absolute;
  top: 5px;
  left: 5px;
  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */
  color: limegreen; /* Distinct color for FPS */
  padding: 2px 5px;
  font-size: 0.8em;
  border-radius: 3px;
  pointer-events: auto; /* Changed from none to allow button clicks */
  z-index: 100; /* Ensure it's on top of other elements */
}

.asciiToggle {
  background-color: rgba(0, 0, 0, 0.7);
  color: #00ff00;
  border: 1px solid #00ff00;
  padding: 2px 6px;
  border-radius: 3px;
  cursor: pointer;
  font-family: inherit;
  transition: all 0.2s ease;
}

.asciiToggle:hover {
  background-color: #00ff00;
  color: #000;
}

/* Floor tile styles removed - now using background colors instead of emoji opacity */

/* Define color palette for consistent theming */
:root {
  --primary-green: #00ff88;    /* Player/positive actions */
  --danger-red: #ff4444;       /* Enemy/damage */
  --warning-yellow: #ffaa00;   /* Caution/items */
  --ui-dark: #1a1a2e;         /* Dark backgrounds */
  --ui-light: #e0e0e0;        /* Light text */
  --ui-accent: #4a9eff;       /* UI accent color */
}

/* Player cell highlighting - makes player always visible */
.playerCell {
  position: relative;
  z-index: 10;
  animation: player-glow 2s ease-in-out infinite;
}

.playerCell::before {
  content: '';
  position: absolute;
  inset: -4px;
  border: 2px solid var(--primary-green);
  border-radius: 4px;
  box-shadow: 0 0 12px var(--primary-green), 
              0 0 24px rgba(0, 255, 136, 0.4),
              inset 0 0 12px rgba(0, 255, 136, 0.2);
  pointer-events: none;
}

@keyframes player-glow {
  0%, 100% { 
    filter: drop-shadow(0 0 4px var(--primary-green));
  }
  50% { 
    filter: drop-shadow(0 0 8px var(--primary-green));
  }
}

/* Enemy cell highlighting - clear threat indication */
.enemyCell {
  position: relative;
  animation: enemy-pulse 1.5s ease-in-out infinite;
}

.enemyCell::before {
  content: '';
  position: absolute;
  inset: -2px;
  border: 1px solid var(--danger-red);
  border-radius: 3px;
  box-shadow: 0 0 6px rgba(255, 68, 68, 0.6);
  pointer-events: none;
}

@keyframes enemy-pulse {
  0%, 100% { 
    filter: drop-shadow(0 0 2px rgba(255, 68, 68, 0.4));
  }
  50% { 
    filter: drop-shadow(0 0 6px rgba(255, 68, 68, 0.8));
  }
}

/* NPC cell highlighting - friendly indication */
.npcCell {
  position: relative;
}

.npcCell::after {
  content: '';
  position: absolute;
  inset: 0;
  background: radial-gradient(circle, transparent 40%, rgba(255, 255, 255, 0.1) 70%);
  pointer-events: none;
}